name: Test

on:
  push:
    pull_request:
    branches:
      - staging
      - trying

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-wasi
          override: true
          components: rustfmt, clippy

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            cargo-${{ runner.os }}-

      - name: Check formatting
        run: cargo fmt -- --check

      - name: Lint
        run: cargo clippy -- -D warnings

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v2

      - name: Install Homebrew
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
          test -d ~/.linuxbrew && eval $(~/.linuxbrew/bin/brew shellenv)
          test -d /home/linuxbrew/.linuxbrew && eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
          echo "eval \$($(brew --prefix)/bin/brew shellenv)" >>~/.profile
          echo "::add-path::/home/linuxbrew/.linuxbrew/bin"
          brew --version

      - name: Verify Homebrew installation
        run: brew --version

      - name: Install lunatic
        run: |
          brew tap lunatic-solutions/lunatic
          brew install lunatic

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-wasi
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            cargo-${{ runner.os }}-

      - name: Run tests
        run: cargo test --no-fail-fast --all --workspace

  bors-report:
    runs-on: ubuntu-latest

    needs:
      - test
      - lint

    steps:
      - name: Check
        run: |
          [${{ needs.lint.result }} == success] &&
          [${{ needs.test.result }} == success] || exit 1
