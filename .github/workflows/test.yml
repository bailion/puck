name: Test

on:
  push:
    pull_request:
    branches:
      - staging
      - trying

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-wasi
          override: true
          components: rustfmt, clippy
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            cargo-${{ runner.os }}-
      - name: Check formatting
        run: cargo fmt -- --check
      - name: Lint
        run: cargo clippy -- -D warnings

  main-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Lunatic
        run: curl https://i.jpillora.com/lunatic-solutions/lunatic@v0.3.1! | sudo bash
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: wasm32-wasi
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            cargo-${{ runner.os }}-
      - name: Run tests
        run: cargo test

  autobahn-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Lunatic
        run: curl https://i.jpillora.com/lunatic-solutions/lunatic@v0.3.1! | sudo bash
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: wasm32-wasi
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            cargo-${{ runner.os }}-
      - run: eval "$(docker-machine env default)" && ./scripts/server_test.sh
        env:
          RUST_BACKTRACE: 1

  bors-report:
    runs-on: ubuntu-latest

    needs:
      - main-tests
      - autobahn-tests
      - lint

    steps:
      - name: Check
        run: |
          [ ${{ needs.lint.result }} == success ] &&
          [ ${{ needs.autobahn-tests.result }} == success ] &&
          [ ${{ needs.main-tests.result }} == success ] || exit 1
